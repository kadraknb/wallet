{"version":3,"sources":["redux/actions/index.js","pages/Login.js","components/Header.js","components/WalletForm.js","components/Table.js","pages/Wallet.js","App.js","serviceWorker.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["removExpensesAction","payload","type","Login","change","aa","target","value","name","setState","submit","nome","state","props","router","dispatch","this","id","className","placeholder","onChange","e","disabled","length","onClick","preventDefault","React","Component","connect","Header","store","user","email","wallet","totalBRL","toFixed","i","WalletForm","fetchApi","getCurrencias","api","Object","keys","filter","fetch","response","json","despesa","currency","total","Number","ask","newExpense","exchangeRates","expenses","description","method","tag","expense","removTotalBRL","ADD_TotalBRL","ee","editExpenses","data","find","buttonEdit","idToEdit","editTableSubmit","editExpense","changeTotalBRL","currencies","map","index","key","Table","removExpenses","funEdit","item","ValorConvertido","Wallet","App","useState","setRouter","routers","Boolean","window","location","hostname","match","INITIAL_STATE","userReducer","action","console","log","Math","abs","splice","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","reduxThunk","Cypress","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7943cbfe.chunk.js","sourcesContent":["export const GET_EMAIL = 'GET_EMAIL';\nexport const GET_CURRENCIES = 'GET_CURRENCIES';\nexport const GET_EXPENSES = 'GET_EXPENSES';\nexport const TOTALBRL = 'TOTALBRL';\nexport const REMOVE_EXPENSES = 'REMOVE_EXPENSES';\nexport const EDIT_TABLEL = 'EDIT_TABLEL';\nexport const FUN_EDIT_TABLEL = 'FUN_EDIT_TABLEL';\n\nexport const loginAction = (payload) => ({\n  type: GET_EMAIL,\n  payload,\n});\n\nexport const currenciasAction = (payload) => ({\n  type: GET_CURRENCIES,\n  payload,\n});\n\nexport const expensesAction = (payload) => ({\n  type: GET_EXPENSES,\n  payload,\n});\n\nexport const removExpensesAction = (payload) => ({\n  type: REMOVE_EXPENSES,\n  payload,\n});\n\nexport const totalBRLAction = (payload) => ({\n  type: TOTALBRL,\n  payload,\n});\n\nexport const editTableLAction = (payload) => ({\n  type: EDIT_TABLEL,\n  payload,\n});\n\nexport const funEditTableAction = (payload) => ({\n  type: FUN_EDIT_TABLEL,\n  payload,\n});\n// export default { loginAction, currenciasAction };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './pages.css';\nimport { loginAction } from '../redux/actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nome: '',\n    };\n  }\n\n  change = (aa) => {\n    const { value, name } = aa.target;\n    this.setState({ [name]: value });\n  }\n\n  submit = () => {\n    const { nome } = this.state;\n    const { router, dispatch } = this.props;\n    dispatch(loginAction(nome));\n    router('Wallet');\n  }\n\n  render() {\n    const { nome } = this.state;\n    return (\n      <div id=\"login_main_flex\">\n        <div id=\"W_login\">\n          <form id=\"W_form_login\">\n            <input\n              className=\"W_F_input\"\n              name=\"nome\"\n              type=\"text\"\n              placeholder=\"Seu nome\"\n              value={ nome }\n              onChange={ (e) => this.change(e) }\n            />\n            <button\n              id=\"W_Bt_login\"\n              type=\"submit\"\n              disabled={ !nome.length > 2 }\n              onClick={ (e) => {\n                e.preventDefault();\n                this.submit();\n              } }\n            >\n              Entrar\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  router: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './components.css';\n\nclass Header extends Component {\n  render() {\n    const { store } = this.props;\n    return (\n      <div id=\"W_Header_main\">\n        <h4>\n          Olá\n          {' '}\n          {store.user.email}\n        </h4>\n        <div>\n          <p>\n            BRL:\n            {' '}\n            {store.wallet.totalBRL.toFixed(2)}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  store: PropTypes.shape({\n    user: PropTypes.shape({\n      email: PropTypes.string,\n    }),\n    wallet: PropTypes.shape({\n      totalBRL: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({ store: state });\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './components.css';\n\nimport {\n  currenciasAction,\n  editTableLAction,\n  expensesAction,\n  funEditTableAction,\n  totalBRLAction,\n} from '../redux/actions';\n\nconst ALIMENTACAO = 'Alimentação';\n\nclass WalletForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      despesa: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: ALIMENTACAO,\n      removTotalBRL: 0,\n      idToEdit: '',\n      buttonEdit: true,\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(funEditTableAction(this.editExpenses));\n    this.fetchApi();\n  }\n\n  fetchApi = async () => {\n    const { dispatch } = this.props;\n    const api = await this.getCurrencias();\n    dispatch(currenciasAction(Object.keys(api).filter((aa) => aa !== 'USDT')));\n  }\n\n  getCurrencias = async () => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const api = await response.json();\n    return api;\n  }\n\n  totalBRL = (despesa, api, currency, dispatch) => {\n    const total = Number(api[currency].ask) * Number(despesa);\n    dispatch(totalBRLAction(Number(total)));\n  }\n\n  newExpense = async () => {\n    const exchangeRates = await this.getCurrencias();\n    const { store: { wallet: { expenses } } } = this.props;\n    const { despesa, description, currency, method, tag } = this.state;\n\n    const expense = {\n      id: expenses.length,\n      value: Number(despesa).toFixed(2),\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates,\n      removTotalBRL: Number(exchangeRates[currency].ask)\n      * Number(despesa),\n      ADD_TotalBRL: Number(exchangeRates[currency].ask)\n      * Number(despesa),\n    };\n    return expense;\n  }\n\n  submit = async (aa) => {\n    aa.preventDefault();\n    const api = await this.getCurrencias();\n    const { dispatch, store: { wallet: { expenses } } } = this.props;\n    const { despesa, description, currency, method, tag } = this.state;\n\n    const expense = {\n      id: expenses.length,\n      value: despesa,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: api,\n    };\n\n    dispatch(expensesAction([expense]));\n\n    this.setState({\n      despesa: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: ALIMENTACAO,\n    });\n\n    this.totalBRL(despesa, api, currency, dispatch);\n  }\n\n  change = (ee) => {\n    const { value, name } = ee.target;\n    this.setState({ [name]: value });\n  }\n\n  editExpenses = (id) => {\n    const { store: { wallet: { expenses } } } = this.props;\n    const data = expenses.find((aa) => aa.id === id.id);\n\n    this.setState({\n      buttonEdit: false,\n      despesa: data.value,\n      description: data.description,\n      currency: data.currency,\n      method: data.method,\n      tag: data.tag,\n      idToEdit: id.id,\n      removTotalBRL: id.value,\n    });\n  }\n\n  editTableSubmit = async (aa) => {\n    aa.preventDefault();\n    const { store: { wallet: { expenses } }, dispatch } = this.props;\n    const {\n      despesa,\n      description,\n      currency,\n      method,\n      tag,\n      idToEdit,\n      removTotalBRL,\n    } = this.state;\n    const exchangeRates = await this.getCurrencias();\n    const editExpense = {\n      expense: {\n        id: expenses.length,\n        value: despesa,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates,\n      },\n      changeTotalBRL: Number(exchangeRates[currency].ask)\n      * Number(despesa) - removTotalBRL,\n    };\n    editExpense.expense.id = idToEdit;\n    dispatch(editTableLAction(editExpense));\n    this.setState({\n      despesa: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: ALIMENTACAO,\n      buttonEdit: true,\n    });\n  }\n\n  render() {\n    const { despesa, description, currency, method, tag, buttonEdit } = this.state;\n    const { store: { wallet: { currencies } } } = this.props;\n    return (\n      <form id=\"W_Form_WF\">\n        <input\n          className=\"W_input_WF\"\n          placeholder=\"valor\"\n          type=\"number\"\n          name=\"despesa\"\n          value={ despesa }\n          onChange={ (ee) => this.change(ee) }\n        />\n        <input\n          className=\"W_input_WF\"\n          placeholder=\"descrição\"\n          type=\"text\"\n          name=\"description\"\n          value={ description }\n          onChange={ (ee) => this.change(ee) }\n        />\n        <select\n          className=\"W_select\"\n          name=\"currency\"\n          value={ currency }\n          onChange={ (ee) => this.change(ee) }\n        >\n          {currencies.map((aa, index) => (\n            <option key={ `${aa}-${index}` }>{aa}</option>\n          ))}\n        </select>\n        <select\n          className=\"W_select\"\n          name=\"method\"\n          value={ method }\n          onChange={ (ee) => this.change(ee) }\n        >\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n        <select\n          className=\"W_select\"\n          name=\"tag\"\n          value={ tag }\n          onChange={ (ee) => this.change(ee) }\n        >\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Transporte</option>\n          <option>Saúde</option>\n        </select>\n        <button\n          className=\"W_butoon\"\n          type=\"submit\"\n          onClick={ (aa) => {\n            const button = buttonEdit ? this.submit(aa) : this.editTableSubmit(aa);\n            return button;\n          } }\n        >\n          { buttonEdit ? 'Adicionar despesa' : 'Editar despesa' }\n        </button>\n      </form>\n    );\n  }\n}\n\nWalletForm.propTypes = {\n  store: PropTypes.shape({\n    wallet: PropTypes.shape({\n      currencies: PropTypes.arrayOf(PropTypes.string),\n      expenses: PropTypes.arrayOf(PropTypes.shape()),\n    }),\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ store: state });\n\nexport default connect(mapStateToProps)(WalletForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { removExpensesAction } from '../redux/actions';\nimport './components.css';\n\nclass Table extends Component {\n  removExpenses = (id) => {\n    const { dispatch } = this.props;\n    dispatch(removExpensesAction(id));\n  };\n\n  editExpenses = (id) => {\n    const {\n      store: {\n        wallet: { funEdit },\n      },\n    } = this.props;\n    funEdit(id);\n  };\n\n  render() {\n    const {\n      store: {\n        wallet: { expenses },\n      },\n    } = this.props;\n    const itensTH = [\n      'Descrição',\n      'Tipo',\n      'Método de pagamento',\n      'Valor',\n      'Câmbio utilizado',\n      'Moeda de conversão',\n      'Valor convertido',\n      'Editar/Excluir',\n    ];\n    return (\n      <table id=\"W_table\">\n        <thead>\n          <tr>\n            {itensTH.map((item, index) => (\n              <th key={ index }>{item}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {expenses\n            && expenses.map((aa) => {\n              const ValorConvertido = Number(\n                aa.exchangeRates[aa.currency].ask,\n              ) * Number(aa.value);\n              return (\n                <tr key={ aa.id }>\n                  <td>{aa.description}</td>\n                  <td>{aa.tag}</td>\n                  <td>{aa.method}</td>\n                  <td>{Number(aa.value).toFixed(2)}</td>\n                  <td>{aa.currency}</td>\n                  <td>\n                    {Number(aa.exchangeRates[aa.currency].ask).toFixed(2)}\n                  </td>\n                  <td>\n                    R$\n                    {' '}\n                    {ValorConvertido.toFixed(2)}\n                  </td>\n                  <td>\n                    <button\n                      className=\"W_butoon\"\n                      type=\"button\"\n                      onClick={ () => this.editExpenses({\n                        id: aa.id,\n                        value: ValorConvertido,\n                      }) }\n                    >\n                      Editar\n                    </button>\n                    <button\n                      className=\"W_butoon\"\n                      type=\"button\"\n                      onClick={ () => this.removExpenses({\n                        id: aa.id,\n                        value: ValorConvertido,\n                      }) }\n                    >\n                      Excluir\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nTable.propTypes = {\n  store: PropTypes.shape({\n    wallet: PropTypes.shape({\n      currencies: PropTypes.arrayOf(PropTypes.string),\n      expenses: PropTypes.arrayOf(PropTypes.shape()),\n      funEdit: PropTypes.func,\n    }),\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (store) => ({ store });\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\n\nimport Header from '../components/Header';\nimport WalletForm from '../components/WalletForm';\nimport Table from '../components/Table';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <div id=\"wallet_main\">\n        <Header />\n        <WalletForm />\n        <Table />\n      </div>\n    );\n  }\n}\n\nexport default Wallet;\n","import React, { useState } from 'react';\n\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nfunction App() {\n  const [router, setRouter] = useState('Wallet');\n\n  const routers = {\n    Login: <Login router={ setRouter } />,\n    Wallet: <Wallet router={ setRouter } />,\n  };\n\n  return (\n    <div id=\"W_main\">\n      {routers[router]}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case GET_EMAIL:\n    return {\n      ...state,\n      email: action.payload,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default userReducer;\n","import {\n  EDIT_TABLEL,\n  FUN_EDIT_TABLEL,\n  GET_CURRENCIES,\n  GET_EXPENSES,\n  REMOVE_EXPENSES,\n  TOTALBRL,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  totalBRL: 0,\n  funEdit: () => '',\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case GET_CURRENCIES:\n    return {\n      ...state,\n      currencies: [...state.currencies, ...action.payload],\n    };\n  case GET_EXPENSES:\n    console.log(state.expenses);\n    console.log(action.payload);\n    return {\n      ...state,\n      expenses: [...state.expenses, ...action.payload],\n    };\n  case REMOVE_EXPENSES:\n    return {\n      ...state,\n      expenses: state.expenses.filter((aa) => aa.id !== action.payload.id),\n      totalBRL: Math.abs(state.totalBRL - action.payload.value),\n    };\n  case TOTALBRL:\n    return {\n      ...state,\n      totalBRL: state.totalBRL + action.payload,\n    };\n  case EDIT_TABLEL:\n    state.expenses.splice(action.payload.id, 1, action.payload.expense);\n    return {\n      ...state,\n      totalBRL: Math.abs(state.totalBRL + action.payload.changeTotalBRL),\n    };\n  case FUN_EDIT_TABLEL:\n    return {\n      ...state,\n      funEdit: action.payload,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default wallet;\n","import { combineReducers } from 'redux';\n\nimport userReducer from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  wallet,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxThunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(reduxThunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\n// store.subscribe(() => {\n//   console.log(store.getState());\n//   store.getState().wallet.expenses.forEach((aa) => {\n//     const total += Number(aa.exchangeRates[aa.currency].ask) * Number(aa.value);\n//     console.log(total.toFixed(2));\n//   });\n//   //  total;\n// });\n\n// store.subscribe(() => {\n//   console.log(store.getState());\n//   store\n//     .getState()\n//     .wallet.expenses.reduce(\n//       (aa) => Number(aa.exchangeRates[aa.currency].ask) * Number(aa.value),\n//       0,\n//     );\n// });\n// export { total };\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}